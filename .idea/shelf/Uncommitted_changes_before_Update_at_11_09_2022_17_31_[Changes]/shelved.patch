Index: src/Window.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\n\r\npublic class Window extends JFrame {\r\n    public static Point mouse = new Point(0, 0);\r\n    MainView mainView;\r\n\r\n    Window() {\r\n        mainView = new MainView();\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        add(mainView);\r\n        pack();\r\n        setLocationRelativeTo(null);\r\n        setVisible(true);\r\n    }\r\n\r\n    //        private static class CheckBox extends JPanel {\r\n//            int x,y;\r\n//            String text;\r\n//            CheckBox(int x, int y, String text) {\r\n//                this.x = x;\r\n//                this.y = y;\r\n//                this.text = text;\r\n//\r\n//            }\r\n//        }\r\n    private static boolean isInside(int value, int lower_bound, int upper_bound) {\r\n        return value >= lower_bound && value <= upper_bound;\r\n    }\r\n\r\n    public static class MainView extends JPanel {\r\n        private final int width = 1000;\r\n        private final int height = 1000;\r\n        private final double ww = width / 2d;\r\n        private final double hh = height / 2d;\r\n        public Point prevPos = new Point(-1, -1);\r\n        //        public Point viewPos = new Point(0,0);\r\n//        public Point prevViewPos = new Point(-1, -1);\r\n        public double viewPosX = 0d;\r\n        public double viewPosY = 0d;\r\n        public double prevViewPosX = -1d;\r\n        public double prevViewPosY = -1d;\r\n        public int scale = 1;\r\n        ControlPanel panel;\r\n\r\n        MainView() {\r\n            panel = new ControlPanel(width / 4, height - 100, width / 2, 80);\r\n            setPreferredSize(new Dimension(width, height));\r\n            setVisible(true);\r\n            setBounds(0, 0, width, height);\r\n        }\r\n\r\n        public void paint(Graphics g) {\r\n            Point m = getMousePosition();\r\n            try {\r\n                mouse.setLocation(0d + m.x, 0d + m.y);\r\n            } catch (NullPointerException ignored) {\r\n\r\n            }\r\n            Graphics2D g2d = (Graphics2D) g;\r\n            g2d.setColor(Color.BLACK);\r\n            g2d.fillRect(0, 0, width, height);\r\n            g2d.setColor(Color.WHITE);\r\n            g2d.drawImage(\r\n                    GameOfLife.drawCells(g2d),\r\n//                    pixels,\r\n                    (int) (ww - scale * (ww - viewPosX)),\r\n                    (int) (hh - scale * (hh - viewPosY)),\r\n//                    width / 2 - width / 2 * scale + viewPos.x * scale,\r\n//                    height / 2 - height / 2 * scale + viewPos.y * scale,\r\n//                    a - ab + cb = a(1 - b) + cb = a - b(a + c) = a(1 - b + c/a) : Hmmmmm...\r\n//                    a - b(a - c) - c * (b - 1) = a - ab + bc - bc + c = a - ab + c = a(1 - b) + c;\r\n                    width * scale,\r\n                    height * scale,\r\n                    this\r\n            );\r\n            g2d.drawString(\"\" + GameOfLife.paused, 20, 20);\r\n            panel.update(g2d);\r\n        }\r\n\r\n        public void drawPixel() {\r\n            if (panel.mouseInside()) return;\r\n            mouse = new Point(\r\n                    (int) ((mouse.x - ww) / scale + ww - viewPosX),\r\n                    (int) ((mouse.y - hh) / scale + hh - viewPosY))\r\n            ;\r\n            if (prevPos.x == -1) prevPos.setLocation(0d + mouse.x, 0d + mouse.y);\r\n            if (!(mouse.x < 0 || mouse.y < 0 || mouse.x >= width || mouse.y >= height)) {\r\n                //pixels.createGraphics().drawLine(mouse.x, mouse.y, prevPos.x, prevPos.y);\r\n                GameOfLife.cells[mouse.y][mouse.x] = true;\r\n            }\r\n            prevPos.setLocation(0d + mouse.x, 0d + mouse.y);\r\n        }\r\n\r\n        public void moveView() {\r\n            if (prevViewPosY == -1d) setPrevViewPos(0d + mouse.x, 0d + mouse.y);\r\n            if (!(mouse.x < 0 || mouse.y < 0 || mouse.x >= width || mouse.y >= height))\r\n                setViewPos(\r\n                        viewPosX + (0d + mouse.x - prevViewPosX) / scale,\r\n                        viewPosY + (0d + mouse.y - prevViewPosY) / scale\r\n                );\r\n            setPrevViewPos(0d + mouse.x, 0d + mouse.y);\r\n        }\r\n\r\n        public void changeScale(int wheelRotation) {\r\n            scale -= wheelRotation;\r\n            if (scale <= 0) scale = 1;\r\n            System.out.println(scale);\r\n        }\r\n\r\n        public void setViewPos(double x, double y) {\r\n            viewPosX = x;\r\n            viewPosY = y;\r\n        }\r\n\r\n        public void setPrevViewPos(double x, double y) {\r\n            prevViewPosX = x;\r\n            prevViewPosY = y;\r\n        }\r\n    }\r\n\r\n// TODO: add checkboxes to menu bar\r\n\r\n    public static class ControlPanel extends JPanel {\r\n        static Color idleColor = new Color(69, 69, 69, 200);\r\n        static Color activeColor = new Color(42, 42, 42, 240);\r\n        static Color c = idleColor;\r\n        static Button b;\r\n        int x, y, width, height;\r\n\r\n        //           CheckBox checkboxes;\r\n        //            Text text;\r\n        ControlPanel(int x, int y, int width, int height) {\r\n            b = new Button(x + 180, y + 20, 40, 40, \"Toggle\");\r\n            this.x = x;\r\n            this.y = y;\r\n            this.width = width;\r\n            this.height = height;\r\n            setPreferredSize(new Dimension(width, height));\r\n            setVisible(true);\r\n        }\r\n\r\n        public void update(Graphics2D g2d) {\r\n            if (mouseInside()) c = activeColor;\r\n            else c = idleColor;\r\n            draw(g2d);\r\n            b.update(g2d);\r\n        }\r\n\r\n        public void draw(Graphics2D g2d) {\r\n            g2d.setColor(c);\r\n            g2d.fillRect(x, y, width, height);\r\n        }\r\n\r\n        public boolean mouseInside() {\r\n            return (\r\n                    mouse != null &&\r\n                            isInside(mouse.x, x, x + width) &&\r\n                            isInside(mouse.y, y, y + height)\r\n            );\r\n        }\r\n\r\n        public static class Button {\r\n            int x, y, width, height;\r\n            String text;\r\n\r\n            Button(int x, int y, int width, int height, String text) {\r\n                this.x = x;\r\n                this.y = y;\r\n                this.width = width;\r\n                this.height = height;\r\n                this.text = text;\r\n            }\r\n\r\n            public void update(Graphics2D g2d) {\r\n                if (mouse != null && GameOfLife.mouseKeys[0] && !GameOfLife.pauseLock &&\r\n                        isInside(mouse.x, x, x + width) &&\r\n                        isInside(mouse.y, y, y + height)\r\n                ) GameOfLife.togglePause();\r\n                draw(g2d);\r\n            }\r\n\r\n            public void draw(Graphics2D g2d) {\r\n                g2d.setColor(Color.DARK_GRAY);\r\n                g2d.fillRect(x, y, width, height);\r\n                g2d.setColor(Color.WHITE);\r\n                g2d.drawString(text, x, y + height / 2);\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Window.java b/src/Window.java
--- a/src/Window.java	(revision be1012eba4cb81e5c2f42dc04ba9dde87c20b909)
+++ b/src/Window.java	(date 1662763657477)
@@ -30,7 +30,7 @@
 
     public static class MainView extends JPanel {
         private final int width = 1000;
-        private final int height = 1000;
+        private final int height = 800;
         private final double ww = width / 2d;
         private final double hh = height / 2d;
         public Point prevPos = new Point(-1, -1);
@@ -105,7 +105,6 @@
         public void changeScale(int wheelRotation) {
             scale -= wheelRotation;
             if (scale <= 0) scale = 1;
-            System.out.println(scale);
         }
 
         public void setViewPos(double x, double y) {
